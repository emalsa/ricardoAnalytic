<?php

/**
 * @file
 * Contains ra_article.module.
 */

use Drupal\Core\Queue\QueueFactory;
use Drupal\Core\Queue\QueueInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\node\Entity\Node;
use Drupal\node\NodeInterface;

/**
 * Implements hook_help().
 */
function ra_article_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the ra_article module.
    case 'help.page.ra_article':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Article') . '</p>';
      return $output;

    default:
  }
}


/**
 * Implements hook_cron().
 */
function ra_article_cron() {
  __tagging_articles();
//    __fix_articles();
}

function __tagging_articles() {
  $nids = Drupal::entityQuery('node')
    ->condition('type', 'article')
    ->condition('status', 1)
    ->condition('field_article_is_sold', 1)
    ->condition('field_article_has_tags', 0)
    ->range(0, 1000)
    ->execute();

  /** @var QueueFactory $queue_factory */
  $queue_service = Drupal::service('queue');
  /** @var QueueInterface $queue_item */
  $queue_item = $queue_service->get('article_tag_queue');

  foreach ($nids as $nid) {
    $data['nid'] = $nid;
    $queue_item->createItem($data);
  }
}

function __fix_articles() {
  // Process articles again (FIXES)

  $nids = Drupal::entityQuery('node')
    ->condition('type', 'article')
    ->condition('status', 1)
//     ->condition('title', 'Article title set', 'STARTS_WITH')

    ->condition('field_article_start_price', '0')
    ->execute();

  /** @var QueueFactory $queue_factory */
  $queue_service = Drupal::service('queue');
  /** @var QueueInterface $queue_item */
  $queue_item = $queue_service->get('article_queue');

  foreach ($nids as $nid) {
    $node = Node::load($nid);
    if ($node instanceof NodeInterface && !$node->field_article_id->isEmpty()) {
      $data['article_id'] = $node->field_article_id->value;
      $queue_item->createItem($data);
    }
  }

}
