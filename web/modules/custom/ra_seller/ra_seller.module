<?php

/**
 * @file
 * Contains ra_seller.module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\node\Entity\Node;
use Drupal\node\NodeInterface;

/**
 * Implements hook_cron().
 */
function ra_seller_cron() {
  $nids = _ra_seller_get_nodes();

  /** @var Drupal\Core\Queue\QueueFactory $queue_factory */
  $queue_service = Drupal::service('queue');
  /** @var Drupal\Core\Queue\QueueInterface $queue_item */
  $queue_item = $queue_service->get('seller_queue');

  foreach ($nids as $nid) {
    $node = Node::load($nid);

    if (!($node instanceof NodeInterface)) {
      continue;
    }

    // Process if older than 2 weeks or init.
    if ($node->field_seller_init_process->value || $node->getChangedTime() < strtotime('-2 week')) {
      $data['nid'] = $nid;
      $queue_item->createItem($data);
    }
  }
}

/**
 * Add seller to to given queue.
 */
function _ra_seller_get_nodes() {
  return Drupal::entityQuery('node')
    ->condition('type', 'seller')
    ->condition('status', 1)
    ->execute();
}

/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function ra_seller_node_presave(EntityInterface $entity) {
  if ($entity->bundle() === 'seller') {
    // The seller_id is node label.
    $entity->field_seller_id->value = $entity->label();

    if ($entity->isNew()) {
      $entity->field_seller_init_process = 1;
    }
  }
}
